{
    "parser": "@typescript-eslint/parser",
    "extends": [
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:jsx-a11y/recommended"
    ],
    "plugins": ["import", "jsx-a11y"],
    "globals": {
      "JSX": true
    },
    "env": {
      "browser": true,
      "es2021": true,
      "node": true,
      "jest": true
    },
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      },
      "sourceType": "module"
    },
    "settings": {
      "react": {
        "version": "detect"
      },
      "import/resolver": {
        "node": {
          "extensions": [".js", ".jsx", ".ts", ".tsx", ".d.ts"]
        }
      }
    },
    "ignorePatterns": ["dist/**/*"],
    "rules": {
      "arrow-parens": ["error", "as-needed"],
      "comma-dangle": ["error", "never"],
      "semi": ["error", "never"],
      "no-console": "warn",
      // Disabled to let TypeScript handle unused variable checking.
      // Otherwise, ESLint would report unused variables in a type's
      // function callback declaration
      "no-unused-vars": "off",
      // Disabled to allow types to be defined at the end of a file
      "no-use-before-define": "off",
      "no-mixed-spaces-and-tabs": "error",
      "object-curly-spacing": ["error", "always"],
      "no-param-reassign": ["error", { "props": false }],
      "no-alert": "error",
      "import/extensions": ["error", "never"],
      "react/jsx-curly-spacing": [
        "error",
        {
          "when": "never",
          "children": {
            "when": "never"
          }
        }
      ],
      "react/jsx-filename-extension": [
        "error",
        { "extensions": [".jsx", ".tsx"] }
      ],
      "react/require-default-props": [
        "error",
        { "ignoreFunctionalComponents": true }
      ],
      "react/jsx-closing-bracket-location": ["error", "tag-aligned"],
      "react/jsx-tag-spacing": [
        "error",
        { "beforeSelfClosing": "always" }
      ],
      "react/jsx-wrap-multilines": "error",
      "react/self-closing-comp": "error",
      "react/no-unused-state": "error",
      "@typescript-eslint/no-use-before-define": ["error"],
      "@typescript-eslint/explicit-module-boundary-types": "error",
      "@typescript-eslint/no-unused-vars": ["error", { "args": "after-used" }]
    }
  }
  